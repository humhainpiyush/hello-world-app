name: Build and Deploy to Staging

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    name: Build node js project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'

      - name: Install Dependencies
        run: npm install

      - name: No Build Setup Needed
        run: echo "No build step for Node.js Express app"

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest

  deploy:
    name: Deploy to Remote VPS
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Navigating to app directory"
            cd ~

            echo "Stopping and removing any existing container"
            docker stop express-app || true
            docker rm express-app || true

            echo "Removing old Docker image"
            docker rmi -f ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest || true

            echo "Logging into Docker Hub"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "Pulling latest image"
            docker pull ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest

            echo "Running new container"
            docker run -d \
              --name express-app \
              -p 3000:3000 \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest
